#!/bin/bash

# Exit codes:
# 1: not run as root
# 2: Gadget folder not found (libcomposite not loaded?)
# 3: Gadget already exists (loading gadget)
# 4: Gadget does not exist (unloading gadget)
# 5: Unknown command

if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

modprobe libcomposite
LIBCOMPOSITE_DIR="/sys/kernel/config/usb_gadget"
if [ ! -d "$LIBCOMPOSITE_DIR" ]; then
  echo "Gadget folder not found. Is libcomposite loaded?"
  exit 2
fi

###
# Activate python venv
source venv/bin/activate

ACTION="$1"
if [[ "$ACTION" == "load" ]]; then
  #####
  # Load gadget

  GADGET="$LIBCOMPOSITE_DIR/steam_deck_gadget"
  if [ -d "$GADGET" ]; then
    echo "Gadget already exists!"
    exit 3
  fi

  # Create USB gadget
  mkdir "$GADGET"

  # Define USB specification
  echo 0x1d6b > "$GADGET/idVendor" # Linux Foundation
  echo 0x0104 > "$GADGET/idProduct" # Multifunction Composite Gadget
  echo 0x0100 > "$GADGET/bcdDevice" # v1
  echo 0x0300 > "$GADGET/bcdUSB" # USB3
  echo 0x02 > "$GADGET/bDeviceClass"
  echo 0x00 > "$GADGET/bDeviceSubClass"
  echo 0x00 > "$GADGET/bDeviceProtocol"

  # Add language strings
  mkdir -p "$GADGET/strings/0x409"

  echo "0123456789" > "$GADGET/strings/0x409/serialnumber"
  echo "Valve" > "$GADGET/strings/0x409/manufacturer"
  echo "Steam Deck" > "$GADGET/strings/0x409/product"

  # Add USB function
  mkdir "$GADGET/functions/hid.usb0"
  echo 0 > "$GADGET/functions/hid.usb0/protocol"
  echo 0 > "$GADGET/functions/hid.usb0/subclass"
  python parse_hid_descriptor.py -i "HID Report Descriptor.txt" > "$GADGET/functions/hid.usb0/report_length"

  # Write HID report descriptor
  python parse_hid_descriptor.py "HID Report Descriptor.txt" | xxd -r -ps > "$GADGET/functions/hid.usb0/report_desc"

  # Create config directory
  mkdir "$GADGET/configs/c.1"
  mkdir "$GADGET/configs/c.1/strings/0x409"

  echo 0x80 > "$GADGET/configs/c.1/bmAttributes"
  echo 100 > "$GADGET/configs/c.1/MaxPower" # 100 mA
  echo "Steam Deck Configuration" > "$GADGET/configs/c.1/strings/0x409/configuration"

  # Link function directory
  ln -s "$GADGET/functions/hid.usb0" "$GADGET/configs/c.1"

  # Activate device
  ls /sys/class/udc > "$GADGET/UDC"

  # Change permission of /dev/hidg* to RW for all users
  chmod 0666 /dev/hidg*

elif [[ "$ACTION" == "unload" ]]; then
  #####
  # Unload gadget
  GADGET=$2

  # Check if specified gadget directory is valid
  if [ -f "$GADGET/UDC" ]; then
      echo "Unloading \"$GADGET\" USB gadget"
  elif [ -f "$LIBCOMPOSITE_DIR/$GADGET/UDC" ]; then
      GADGET="$LIBCOMPOSITE_DIR/$GADGET"
      echo "Unloading \"$GADGET\" USB gadget"
  else
    echo "ERROR: \"$GADGET\" not a valid USB gadget"
    exit 4
  fi
  
  # Deactivate gadget
  echo "" > "$GADGET"/UDC
  
  # Loop over all gadget configs
  for CONFIG in "$GADGET"/configs/*/ ; do
  
      # Delete function links
      for FUNCTION in $(find "$CONFIG" -type l); do
          rm "$FUNCTION"
      done
  
      # Remove config strings directories
      for LANGUAGE in "$CONFIG"/strings/*/ ; do
          rmdir "$LANGUAGE"
      done
  
      # Remove configuration
      rmdir "$CONFIG"
  done
  
  # Delete functions
  for FUNCTION in "$GADGET"/functions/*/ ; do
      rmdir "$FUNCTION"
  done
  
  # Remove strings
  for LANGUAGE in "$GADGET"/strings/*/ ; do
      rmdir "$LANGUAGE"
  done
  
  # Remove gadget directory
  rmdir "$GADGET"

else
  #####
  # Unknown ACTION parameter
  echo "Unknown command \"$ACTION\""
  exit 5
fi

###
# Deactivate python venv
deactivate